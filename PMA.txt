Payroll Management Application
Module: Auth, Employee CRUD, Salary Setup, Payroll Run & Payslip

1) Objective
Build a secure mini-admin panel that lets an admin:
- Log in & log out securely.
- Create/Read/Update/Delete employees (6 core fields).
- Configure salary details for each employee.
- Run monthly payroll with automated calculations (gross, deductions, net).
- Generate, view, and download payslips.
This is a minimal, production-lean MVP that can be extended into a full HR/payroll suite.
2) Scope
In-Scope (MVP)
- Auth: Login form, session management, logout, brute-force lockout.
- Employees: 6 fields, list with search & pagination, add/edit/delete, server validations.
- Salary Setup (per employee): Basic Pay, HRA %, Allowance %, PF %, Tax %.
- Payroll Run: Select Month/Year → auto-compute gross, deductions, net. Prevent duplicates per employee per
month; allow overwrite.
- Payslip: Per-employee view + download with calculation breakdown.
- Soft Delete: Employees should be excluded from active views.
Out-of-Scope (for 3-hour MVP)
- Roles beyond Admin (no employee self-service).
- Bulk import/export, mass updates.
- Notifications, advanced taxation, arrears/loans, multi-currency.
- Mobile app, SSO/OAuth, audit trail UI.
3) Users & Roles
Admin (single role) can:
- Log in/out.
- Manage employees.
- Configure salaries.
- Run payroll.
- View/download payslips.
User Stories
- As an Admin, I can log in and land on a dashboard.
- As an Admin, I can add a new employee with validation.
- As an Admin, I can view a paginated, searchable employee list.
- As an Admin, I can edit or soft-delete an employee.
- As an Admin, I can assign/update a salary structure for an employee.
- As an Admin, I can run payroll for a given month and see gross, deductions, and net.
- As an Admin, I can view/download a payslip for an employee for a given month.
4) UI/UX Requirements
Global
- Clean, responsive layout with a header (app name + user menu with Logout).
- Toasts/snackbars for success/error; inline form errors per field.
- Keyboard navigation and accessible labels.
Screens
1. Login: Fields: Email/Username, Password. Redirect on success, error on failure.
2. Dashboard: Cards for Employees, Salary Setup, Payroll.
3. Employees → List: Paginated, searchable, add/edit/delete.
4. Employees → Add/Edit: 6 fields.
5. Salary Setup: Fields for Basic Pay, HRA %, Allowance %, PF %, Tax % with preview.
6. Payroll Run: Select month/year, generate results, overwrite option.
7. Payslip: View/download per employee with breakdown and net in words.
5) Security Requirements
- Password hashing using strong algorithm.
- Session hardening: regenerate session ID on login; secure cookies.
- CSRF token for all state-changing requests.
- Server-side input validation.
- Prepared/parameterized data access.
- Brute-force defense: lock account after 5 failed attempts.
- Authorization middleware for admin routes.
6) Business Rules
Salary
- Gross = Basic + (Basic × HRA%) + (Basic × Allowance%).
- Deductions = (Gross × PF%) + (Gross × Tax%).
- Net = Gross − Deductions.
Payroll
- One record per employee per month; overwrite option allowed.
- Inactive employees excluded from generation.
- Validation for percentages (0–100).
Payslip
- Show breakdown, totals, net in words, timestamp, unique slip ID.
7) Validation Rules
Login: Email/username and password required. Lockout after 5 failed attempts.
Employee: Unique Emp Code, valid email, phone 10–15 digits, no future DOJ.
Salary: Positive Basic, percentage fields between 0–100.
Payroll: Valid month/year; no future months.
8) Non-Functional
- Performance: Paginated lists.
- Logging: Auth events and errors logged.
- Timezone: IST for all timestamps.
- Coding Standards: Structured, readable, minimal comments.
- Docs: README with setup and default credentials.
9) Suggested Routes/Flows (Technology-agnostic)
Auth: login/logout.
Employees: list, create, read, update, delete.
Salary: view/update per employee.
Payroll: run, view, payslip view/download.
10) Acceptance Criteria
- Auth: Login/logout, lockout works.
- Employees: CRUD with validation and soft delete.
- Salary Setup: Saved and preview works.
- Payroll Run: Generates correctly, avoids duplicates unless overwrite.
- Payslip: Accurate breakdown, downloadable, net in words.
- Security: CSRF, sessions, validations enforced.
- UX: Responsive, accessible, clear states.
11) Time-boxed Plan (≤ 3 hours)
0:00–0:25: Setup, auth basics, seed admin.
0:25–1:15: Employee CRUD.
1:15–1:50: Salary setup with preview.
1:50–2:30: Payroll run logic and month view.
2:30–3:00: Payslip view/download, polish, README.
12) Evaluation Rubric
- Architecture & Design (25%)
- Security & Correctness (25%)
- Business Logic Accuracy (20%)
- UX & Accessibility (15%)
- Resilience & Observability (10%)
- Docs & Readability (5%)
13) Edge Cases
- Payroll run without salary setup.
- Overwrite handling.
- Inactive employee toggled active later.
- Extreme percentage values.
- Rounding consistency.
14) Sample Payslip Layout
Header: Company/App name, Payslip Month/Year, Timestamp, Slip ID.
Employee: Code, Name, Department, DOJ.
Earnings: Basic, HRA, Allowances.
Deductions: PF, Tax.
Totals: Gross, Deductions, Net, Net in Words.
Footer: Authorized signatory, disclaimer.
15) Deliverables
- Running application with login, dashboard, employee, salary, payroll, and payslip screens.
- README with setup steps and default credentials.
16) Backlog (Post-MVP)
- Employee self-service.
- Reports and exports.
- Advanced payroll components (arrears, loans).
- Holiday/attendance integration.
- Audit trail UI, 2FA.